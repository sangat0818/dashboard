{"version":3,"file":"static/js/739.708715ae.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Timeline.js","components/reports/MarketingStaffList.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","import React, { useState, useEffect, useMemo } from 'react';\nimport {\n  Box, Typography, TextField, InputAdornment, Button, Card, CardContent, \n  Avatar, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, \n  TablePagination, useTheme, Snackbar, Alert, LinearProgress, Grid, Paper, \n  Divider, Chip, Skeleton, IconButton, Tooltip\n} from '@mui/material';\nimport {\n  CalendarToday as CalendarIcon,\n  Person as PersonIcon,\n  People as PeopleIcon,\n  Search as SearchIcon,\n  Phone as PhoneIcon,\n  Email as EmailIcon,\n  LocationOn as LocationIcon,\n  Visibility as ViewIcon,\n  Timeline as ActivityIcon\n} from '@mui/icons-material';\nimport { collection, query, getDocs, doc, getDoc } from 'firebase/firestore';\nimport { db } from '../../services/firebase';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { canViewMarketingStaffList } from '../../utils/roles';\n\n// Helper function to get all marketing staff under a user recursively\nconst getAllMarketingStaffUnder = (userId, allUsers) => {\n  // Get direct subordinates\n  const directSubordinates = allUsers.filter(u => u.reportingToId === userId);\n  \n  // Marketing staff among direct subordinates\n  const directMarketingStaff = directSubordinates.filter(u => u.role === 'MarketingStaff');\n  \n  // Get all marketing staff under managers who are direct subordinates\n  const managerSubordinates = directSubordinates.filter(u => u.role !== 'MarketingStaff');\n  \n  let allMarketingStaff = [...directMarketingStaff];\n  \n  // Recursively get marketing staff under managers\n  managerSubordinates.forEach(manager => {\n    const staffUnderManager = getAllMarketingStaffUnder(manager.id, allUsers);\n    allMarketingStaff = [...allMarketingStaff, ...staffUnderManager];\n  });\n  \n  return allMarketingStaff;\n};\n\nexport default function MarketingStaffList() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { userProfile, allUsers, loading: authLoading } = useAuth();\n  \n  // State\n  const [loading, setLoading] = useState(false);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [staffList, setStaffList] = useState([]);\n  const [enrichedStaffList, setEnrichedStaffList] = useState([]);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  \n  // Effect to load all marketing staff under the current user\n  useEffect(() => {\n    const loadMarketingStaff = async () => {\n      if (!userProfile || !allUsers || allUsers.length === 0) return;\n      \n      setLoading(true);\n      \n      try {\n        // First get all marketing staff based on user role\n        let marketingStaff = [];\n        \n        if (userProfile.role === 'Admin') {\n          // Admin can see all marketing staff\n          marketingStaff = allUsers.filter(u => u.role === 'MarketingStaff');\n        } else {\n          // Others can see marketing staff under them\n          marketingStaff = getAllMarketingStaffUnder(userProfile.id, allUsers);\n        }\n        \n        // Set the base list\n        setStaffList(marketingStaff);\n        \n        // Fetch additional data for each marketing staff (performance metrics)\n        await enrichStaffData(marketingStaff);\n      } catch (error) {\n        console.error(\"Error loading marketing staff:\", error);\n        setSnackbar({\n          open: true,\n          message: 'Error loading marketing staff data: ' + error.message,\n          severity: 'error'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    loadMarketingStaff();\n  }, [userProfile, allUsers]);\n  \n  // Function to enrich staff data with performance metrics\n  const enrichStaffData = async (staffList) => {\n    if (!staffList || staffList.length === 0) {\n      setEnrichedStaffList([]);\n      return;\n    }\n    \n    try {\n      const enrichedData = [];\n      \n      // For each staff member, get their reporting manager and visit counts\n      for (const staff of staffList) {\n        // Get reporting manager\n        const manager = allUsers.find(u => u.id === staff.reportingToId);\n        \n        // Get visit count (last 30 days)\n        const thirtyDaysAgo = new Date();\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\n        \n        // We'll fetch actual visit count in a separate API call when needed\n        // For now just provide placeholder data\n        \n        enrichedData.push({\n          ...staff,\n          managerName: manager?.name || 'N/A',\n          managerRole: manager?.role || 'N/A',\n          visitCount30Days: Math.floor(Math.random() * 30), // Placeholder, replace with actual data\n          retailerCount: Math.floor(Math.random() * 20), // Placeholder, replace with actual data\n          lastActive: new Date(Date.now() - Math.floor(Math.random() * 7 * 24 * 60 * 60 * 1000)) // Placeholder\n        });\n      }\n      \n      setEnrichedStaffList(enrichedData);\n    } catch (error) {\n      console.error(\"Error enriching staff data:\", error);\n    }\n  };\n  \n  // Filtered staff based on search term\n  const filteredStaff = useMemo(() => {\n    if (!enrichedStaffList) return [];\n    \n    return enrichedStaffList.filter(staff => {\n      // Filter by search term (name, phone, email)\n      const matchesSearch = !searchTerm.trim() || \n        (staff.name && staff.name.toLowerCase().includes(searchTerm.toLowerCase())) ||\n        (staff.phoneNumber && staff.phoneNumber.includes(searchTerm)) ||\n        (staff.email && staff.email.toLowerCase().includes(searchTerm.toLowerCase()));\n      \n      return matchesSearch;\n    });\n  }, [enrichedStaffList, searchTerm]);\n  \n  // Pagination handlers\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  \n  // Calculate displayed rows based on pagination\n  const displayedRows = filteredStaff.slice(\n    page * rowsPerPage,\n    page * rowsPerPage + rowsPerPage\n  );\n  \n  // View staff details\n  const handleViewStaffDetails = (staffId) => {\n    navigate(`/sales/staff/${staffId}/details`);\n  };\n  \n  // View staff visit history\n  const handleViewVisitHistory = (staffId) => {\n    navigate(`/staff/${staffId}/visits`);\n  };\n\n  // Check if user has permission to view this list\n  if (!canViewMarketingStaffList(userProfile)) {\n    return (\n      <Box sx={{ p: 4, textAlign: 'center' }}>\n        <Typography variant=\"h6\" color=\"error\">\n          You are not authorized to view marketing staff list.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Card sx={{ borderRadius: 2, boxShadow: theme.shadows[2], mb: 4 }}>\n        <CardContent sx={{ p: 3 }}>\n          {/* Header */}\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n            <Avatar\n              sx={{\n                bgcolor: theme.palette.warning.light,\n                color: theme.palette.warning.contrastText || '#fff',\n                width: 48,\n                height: 48,\n                mr: 2,\n              }}\n            >\n              <PeopleIcon />\n            </Avatar>\n            <Box>\n              <Typography variant=\"h5\" fontWeight=\"bold\" color=\"text.primary\">\n                Marketing Staff List\n              </Typography>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                All marketing staff reporting to you (directly or indirectly)\n              </Typography>\n            </Box>\n          </Box>\n\n          {/* Filters */}\n          <Paper sx={{ p: 2, mb: 4, borderRadius: 2 }}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12}>\n                <TextField\n                  label=\"Search by Name, Email or Phone\"\n                  type=\"text\"\n                  size=\"small\"\n                  fullWidth\n                  value={searchTerm}\n                  onChange={(e) => setSearchTerm(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon sx={{ color: theme.palette.warning.main }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ '& .MuiOutlinedInput-root': { borderRadius: 2 } }}\n                />\n              </Grid>\n            </Grid>\n          </Paper>\n\n          {/* Results Table */}\n          {loading ? (\n            <Box sx={{ mb: 2 }}>\n              <LinearProgress sx={{ height: 6, borderRadius: 3 }} />\n              {/* Skeleton placeholders for table */}\n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Marketing Staff</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Contact Info</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Reports To</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold', textAlign: 'center' }}>Actions</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {[...Array(5)].map((_, i) => (\n                      <TableRow key={i}>\n                        <TableCell>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Skeleton variant=\"circular\" width={40} height={40} sx={{ mr: 1.5 }} />\n                            <Skeleton variant=\"text\" width={150} />\n                          </Box>\n                        </TableCell>\n                        <TableCell><Skeleton variant=\"text\" width={180} /></TableCell>\n                        <TableCell><Skeleton variant=\"text\" width={150} /></TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>\n                            <Skeleton variant=\"circular\" width={32} height={32} />\n                            <Skeleton variant=\"circular\" width={32} height={32} />\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Box>\n          ) : filteredStaff.length === 0 ? (\n            <Box sx={{ textAlign: 'center', p: 4, bgcolor: 'rgba(0,0,0,0.02)', borderRadius: 2 }}>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                No marketing staff found matching your criteria\n              </Typography>\n            </Box>\n          ) : (\n            <TableContainer>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Marketing Staff</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Contact Info</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Reports To</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold', textAlign: 'center' }}>Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {displayedRows.length === 0 ? (\n                    <TableRow>\n                      <TableCell colSpan={4} align=\"center\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                          No matching results found\n                        </Typography>\n                      </TableCell>\n                    </TableRow>\n                  ) : (\n                    displayedRows.map((staff) => (\n                      <TableRow \n                        key={staff.id}\n                        sx={{ '&:hover': { bgcolor: 'rgba(0,0,0,0.04)' } }}\n                      >\n                        <TableCell>\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                            <Avatar \n                              sx={{ \n                                width: 40, height: 40, mr: 1.5,\n                                bgcolor: theme.palette.warning.main,\n                              }}\n                            >\n                              {staff.name?.charAt(0) || '?'}\n                            </Avatar>\n                            <Box>\n                              <Typography variant=\"body2\" fontWeight={500}>\n                                {staff.name || 'Unknown'}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                        <TableCell>\n                          <Box>\n                            <Box sx={{ display: 'flex', alignItems: 'center', mb: 0.5 }}>\n                              <PhoneIcon sx={{ fontSize: 16, color: theme.palette.warning.main, mr: 1 }} />\n                              <Typography variant=\"body2\">\n                                {staff.phoneNumber || 'No phone'}\n                              </Typography>\n                            </Box>\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                              <EmailIcon sx={{ fontSize: 16, color: theme.palette.warning.main, mr: 1 }} />\n                              <Typography variant=\"body2\">\n                                {staff.email || 'No email'}\n                              </Typography>\n                            </Box>\n                          </Box>\n                        </TableCell>\n                        <TableCell>\n                          <Box>\n                            <Typography variant=\"body2\" fontWeight={500}>\n                              {staff.managerName || 'N/A'}\n                            </Typography>\n                            <Typography variant=\"caption\" color=\"text.secondary\">\n                              {staff.managerRole?.replace(/([A-Z])/g, ' $1').trim() || 'N/A'}\n                            </Typography>\n                          </Box>\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <Box sx={{ display: 'flex', justifyContent: 'center', gap: 1 }}>\n                            <Tooltip title=\"View Staff Details\">\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handleViewStaffDetails(staff.id)}\n                                sx={{\n                                  bgcolor: theme.palette.warning.light,\n                                  color: theme.palette.warning.main,\n                                  '&:hover': { bgcolor: theme.palette.warning.light }\n                                }}\n                              >\n                                <ViewIcon fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                            <Tooltip title=\"View Visit History\">\n                              <IconButton\n                                size=\"small\"\n                                onClick={() => handleViewVisitHistory(staff.id)}\n                                sx={{\n                                  bgcolor: theme.palette.info.light,\n                                  color: theme.palette.info.main,\n                                  '&:hover': { bgcolor: theme.palette.info.light }\n                                }}\n                              >\n                                <ActivityIcon fontSize=\"small\" />\n                              </IconButton>\n                            </Tooltip>\n                          </Box>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  )}\n                </TableBody>\n              </Table>\n              <TablePagination\n                rowsPerPageOptions={[10, 25, 50, 100]}\n                component=\"div\"\n                count={filteredStaff.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </TableContainer>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Snackbar for notifications */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={() => setSnackbar({ ...snackbar, open: false })} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n} "],"names":["createSvgIcon","_jsx","d","getAllMarketingStaffUnder","userId","allUsers","directSubordinates","filter","u","reportingToId","directMarketingStaff","role","managerSubordinates","allMarketingStaff","forEach","manager","staffUnderManager","id","MarketingStaffList","theme","useTheme","navigate","useNavigate","userProfile","loading","authLoading","useAuth","setLoading","useState","searchTerm","setSearchTerm","staffList","setStaffList","enrichedStaffList","setEnrichedStaffList","snackbar","setSnackbar","open","message","severity","page","setPage","rowsPerPage","setRowsPerPage","useEffect","async","length","marketingStaff","enrichStaffData","error","console","loadMarketingStaff","enrichedData","staff","find","thirtyDaysAgo","Date","setDate","getDate","push","managerName","name","managerRole","visitCount30Days","Math","floor","random","retailerCount","lastActive","now","filteredStaff","useMemo","trim","toLowerCase","includes","phoneNumber","email","displayedRows","slice","canViewMarketingStaffList","_jsxs","Box","children","Card","sx","borderRadius","boxShadow","shadows","mb","CardContent","p","display","alignItems","Avatar","bgcolor","palette","warning","light","color","contrastText","width","height","mr","PeopleIcon","Typography","variant","fontWeight","Paper","Grid","container","spacing","item","xs","TextField","label","type","size","fullWidth","value","onChange","e","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","main","LinearProgress","TableContainer","Table","TableHead","TableRow","TableCell","textAlign","TableBody","Array","map","_","i","Skeleton","align","justifyContent","gap","colSpan","_staff$name","_staff$managerRole","charAt","PhoneIcon","fontSize","EmailIcon","replace","Tooltip","title","IconButton","onClick","handleViewStaffDetails","staffId","ViewIcon","handleViewVisitHistory","info","ActivityIcon","TablePagination","rowsPerPageOptions","component","count","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","parseInt","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}