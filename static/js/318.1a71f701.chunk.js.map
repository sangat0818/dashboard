{"version":3,"file":"static/js/318.1a71f701.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ProductionQuantityLimits.js","../node_modules/date-fns/differenceInMilliseconds.js","../node_modules/date-fns/differenceInMinutes.js","../node_modules/date-fns/_lib/getRoundingMethod.js","components/reports/MarketingStaffDetailedReport.js","../node_modules/@mui/icons-material/esm/FilterAlt.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 10h-2V8h2zm0-4h-2V1h2zM7 18c-1.1 0-1.99.9-1.99 2S5.9 22 7 22s2-.9 2-2-.9-2-2-2m10 0c-1.1 0-1.99.9-1.99 2s.89 2 1.99 2 2-.9 2-2-.9-2-2-2m-8.9-5h7.45c.75 0 1.41-.41 1.75-1.03L21 4.96 19.25 4l-3.7 7H8.53L4.27 2H1v2h2l3.6 7.59-1.35 2.44C4.52 15.37 5.48 17 7 17h12v-2H7z\"\n}), 'ProductionQuantityLimits');","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { millisecondsInMinute } from \"./constants.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInMinutes} function options.\n */\n\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * @param dateLeft - The later date\n * @param dateRight - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of minutes\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * const result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are between 10:01:59 and 10:00:00\n * const result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\nexport function differenceInMinutes(dateLeft, dateRight, options) {\n  const diff =\n    differenceInMilliseconds(dateLeft, dateRight) / millisecondsInMinute;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMinutes;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import React, { useState, useEffect, useMemo } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport {\n  Box, Typography, TextField, InputAdornment, Button, Card, CardContent, \n  Avatar, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, \n  TablePagination, useTheme, Snackbar, Alert, LinearProgress, Grid, Paper, \n  Divider, Chip, Tooltip, IconButton, Skeleton\n} from '@mui/material';\nimport {\n  CalendarToday as CalendarIcon,\n  DateRange as DateRangeIcon,\n  ArrowBack as ArrowBackIcon,\n  Assessment as AssessmentIcon, \n  Person as PersonIcon,\n  Store as StoreIcon,\n  Search as SearchIcon,\n  FileDownload as FileDownloadIcon,\n  FilterAlt as FilterIcon,\n  ProductionQuantityLimits as ProductIcon,\n  ExpandMore as ExpandMoreIcon,\n  ExpandLess as ExpandLessIcon\n} from '@mui/icons-material';\nimport { collection, query, where, getDocs, orderBy, getDoc, doc, Timestamp } from 'firebase/firestore';\nimport { db } from '../../services/firebase';\nimport { useAuth } from '../../context/AuthContext';\nimport { getSubordinateIds, canViewStaffDetailedReport } from '../../utils/roles';\nimport { format, parseISO, isValid, isWithinInterval, differenceInMinutes } from 'date-fns';\n\n// Helper function to format date\nconst formatDate = (timestamp) => {\n  if (!timestamp) return 'N/A';\n  \n  if (timestamp && typeof timestamp.toDate === 'function') {\n    return format(timestamp.toDate(), 'MMM d, yyyy, h:mm a');\n  }\n  \n  if (timestamp instanceof Date) {\n    return format(timestamp, 'MMM d, yyyy, h:mm a');\n  }\n  \n  try {\n    const date = new Date(timestamp);\n    if (isValid(date)) {\n      return format(date, 'MMM d, yyyy, h:mm a');\n    }\n  } catch (e) {\n    console.error(\"Error parsing date:\", e);\n  }\n  \n  return 'Invalid Date';\n};\n\n// Helper function to convert timestamp to date object\nconst toDate = (timestamp) => {\n  if (!timestamp) return null;\n  \n  if (timestamp && typeof timestamp.toDate === 'function') {\n    return timestamp.toDate();\n  }\n  \n  if (timestamp instanceof Date) {\n    return timestamp;\n  }\n  \n  try {\n    const date = new Date(timestamp);\n    if (isValid(date)) {\n      return date;\n    }\n  } catch (e) {\n    console.error(\"Error parsing date:\", e);\n  }\n  \n  return null;\n};\n\nexport default function MarketingStaffDetailedReport() {\n  const theme = useTheme();\n  const navigate = useNavigate();\n  const { staffId } = useParams();\n  const location = useLocation();\n  const { userProfile, allUsers, allDealers, loading: authLoading } = useAuth();\n  \n  // Get staff data from location state if available (from clicking on the list)\n  const staffFromLocation = location.state?.staff || null;\n  \n  // State\n  const [loading, setLoading] = useState(false);\n  const [loadingAuth, setLoadingAuth] = useState(false);\n  const [dataLoading, setDataLoading] = useState(false);\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [retailerSearch, setRetailerSearch] = useState('');\n  const [staffData, setStaffData] = useState(staffFromLocation);\n  const [visitsData, setVisitsData] = useState([]);\n  const [snackbar, setSnackbar] = useState({ open: false, message: '', severity: 'success' });\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [expandedRows, setExpandedRows] = useState({});\n  \n  // Additional data\n  const [products, setProducts] = useState({});\n  const [retailers, setRetailers] = useState({});\n  const [summaryStats, setSummaryStats] = useState({\n    totalVisits: 0,\n    uniqueRetailers: 0,\n    totalProducts: 0,\n    totalSalesAmount: 0\n  });\n  const [unauthorized, setUnauthorized] = useState(false);\n\n  // Initialize with 30-day date range\n  useEffect(() => {\n    const today = new Date();\n    const thirtyDaysAgo = new Date();\n    thirtyDaysAgo.setDate(today.getDate() - 30);\n    \n    setStartDate(thirtyDaysAgo.toISOString().split('T')[0]);\n    setEndDate(today.toISOString().split('T')[0]);\n  }, []);\n\n  // Check permissions (but don't block rendering)\n  useEffect(() => {\n    const checkPermissions = async () => {\n      setLoadingAuth(true);\n      \n      // Need userProfile and staffData to check permissions\n      if (!userProfile || (!staffData && !staffId)) {\n        setLoadingAuth(false);\n        return;\n      }\n      \n      // If we have the staff data and user\n      if (userProfile) {\n        let hasAccess = false;\n        \n        // Admin can see everything\n        if (userProfile.role === 'Admin') {\n          hasAccess = true;\n        }\n        // Users can view their own data\n        else if (userProfile.id === staffId) {\n          hasAccess = true;\n        }\n        // Managers can view their subordinates\n        else {\n          const subordinateIds = getSubordinateIds(userProfile.id, allUsers);\n          hasAccess = subordinateIds.includes(staffId);\n        }\n        \n        setUnauthorized(!hasAccess);\n      }\n      \n      setLoadingAuth(false);\n    };\n    \n    checkPermissions();\n  }, [userProfile, staffData, staffId, allUsers]);\n\n  // Fetch staff data if not available from location state\n  useEffect(() => {\n    if (!staffId || staffData) return;\n    \n    const fetchStaffData = async () => {\n      setLoading(true);\n      try {\n        const staffDocRef = doc(db, 'users', staffId);\n        const staffDoc = await getDoc(staffDocRef);\n        \n        if (staffDoc.exists()) {\n          setStaffData({ id: staffDoc.id, ...staffDoc.data() });\n        } else {\n          setSnackbar({\n            open: true,\n            message: 'Staff not found',\n            severity: 'error'\n          });\n        }\n      } catch (error) {\n        console.error(\"Error fetching staff data:\", error);\n        setSnackbar({\n          open: true,\n          message: 'Error loading staff data: ' + error.message,\n          severity: 'error'\n        });\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchStaffData();\n  }, [staffId, staffData]);\n\n  // Fetch product details\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const productsSnapshot = await getDocs(collection(db, 'products'));\n        const productsData = {};\n        productsSnapshot.forEach(doc => {\n          productsData[doc.id] = { id: doc.id, ...doc.data() };\n        });\n        setProducts(productsData);\n      } catch (error) {\n        console.error(\"Error fetching products:\", error);\n      }\n    };\n    \n    fetchProducts();\n  }, []);\n\n  // Get retailer details\n  useEffect(() => {\n    const fetchRetailers = async () => {\n      try {\n        const retailersSnapshot = await getDocs(collection(db, 'retailers'));\n        const retailersData = {};\n        retailersSnapshot.forEach(doc => {\n          retailersData[doc.id] = { id: doc.id, ...doc.data() };\n        });\n        setRetailers(retailersData);\n      } catch (error) {\n        console.error(\"Error fetching retailers:\", error);\n      }\n    };\n    \n    fetchRetailers();\n  }, []);\n\n  // Generate the report when filters change or when staff data is loaded\n  useEffect(() => {\n    if ((staffData?.id || staffId) && startDate && endDate) {\n      generateReport();\n    }\n  }, [staffData, startDate, endDate]);\n\n  // Generate the detailed report\n  const generateReport = async () => {\n    if (!startDate || !endDate || (!staffData?.id && !staffId)) {\n      setSnackbar({\n        open: true,\n        message: 'Please select a date range',\n        severity: 'warning'\n      });\n      return;\n    }\n\n    setDataLoading(true);\n    \n    try {\n      // Create date range\n      const startTimestamp = new Date(startDate + 'T00:00:00');\n      const endTimestamp = new Date(endDate + 'T23:59:59');\n      \n      // Use staffId from props or from staffData\n      const staffIdToUse = staffData?.id || staffId;\n      \n      // Query all visits for this staff\n      const visitsQuery = query(\n        collection(db, 'visits'),\n        where('userId', '==', staffIdToUse),\n        where('checkInTime', '>=', startTimestamp),\n        where('checkInTime', '<=', endTimestamp),\n        orderBy('checkInTime', 'desc')\n      );\n      \n      const visitsSnapshot = await getDocs(visitsQuery);\n      let fetchedVisits = visitsSnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        checkInTime: toDate(doc.data().checkInTime),\n        checkOutTime: toDate(doc.data().checkOutTime)\n      }));\n      \n      // Fetch inventory entries for pricing data\n      const inventoryEntryIds = new Set();\n      fetchedVisits.forEach(visit => {\n        if (visit.inventoryEntryId) {\n          inventoryEntryIds.add(visit.inventoryEntryId);\n        }\n      });\n      \n      const inventoryEntriesMap = {};\n      if (inventoryEntryIds.size > 0) {\n        const inventoryPromises = Array.from(inventoryEntryIds).map(async (entryId) => {\n          try {\n            const entryDoc = await getDoc(doc(db, 'inventoryEntries', entryId));\n            if (entryDoc.exists()) {\n              inventoryEntriesMap[entryId] = entryDoc.data();\n            }\n          } catch (error) {\n            console.error(`Error fetching inventory entry ${entryId}:`, error);\n          }\n        });\n        \n        await Promise.all(inventoryPromises);\n      }\n      \n      // Fetch product rates for backup pricing\n      const productRatesQuery = query(collection(db, 'productRates'));\n      const productRatesSnapshot = await getDocs(productRatesQuery);\n      const productRatesMap = {};\n      \n      productRatesSnapshot.forEach(doc => {\n        const data = doc.data();\n        if (data.productId && data.rate) {\n          productRatesMap[data.productId] = parseFloat(data.rate);\n        }\n      });\n      \n      // Calculate sales amounts and enrich visit data\n      const uniqueRetailersSet = new Set();\n      let totalProductCount = 0;\n      let totalSalesAmount = 0;\n      \n      fetchedVisits = fetchedVisits.map(visit => {\n        if (visit.retailerId) {\n          uniqueRetailersSet.add(visit.retailerId);\n        }\n        \n        let visitTotal = 0;\n        let productCount = 0;\n        \n        if (Array.isArray(visit.products)) {\n          visit.products = visit.products.map(product => {\n            const count = parseInt(product.count) || 0;\n            productCount += count;\n            \n            // Find product rate using our tiered approach\n            let rate = null;\n            \n            // 1. Check product itself\n            if (product.rate) {\n              rate = parseFloat(product.rate);\n            } \n            // 2. Check inventory entry\n            else if (visit.inventoryEntryId && inventoryEntriesMap[visit.inventoryEntryId]) {\n              const inventoryEntry = inventoryEntriesMap[visit.inventoryEntryId];\n              const productEntry = inventoryEntry.productEntries?.find(pe => pe.productId === product.productId);\n              if (productEntry && productEntry.rate) {\n                rate = parseFloat(productEntry.rate);\n              }\n            }\n            // 3. Check global product rates\n            if (rate === null && productRatesMap[product.productId]) {\n              rate = productRatesMap[product.productId];\n            }\n            \n            // Add calculated rate and amount to the product\n            product.calculatedRate = rate;\n            product.calculatedAmount = rate !== null ? (count * rate) : 0;\n            visitTotal += product.calculatedAmount;\n            \n            return product;\n          });\n        }\n        \n        totalProductCount += productCount;\n        totalSalesAmount += visitTotal;\n        \n        return {\n          ...visit,\n          productCount,\n          totalAmount: visitTotal\n        };\n      });\n      \n      setVisitsData(fetchedVisits);\n      setSummaryStats({\n        totalVisits: fetchedVisits.length,\n        uniqueRetailers: uniqueRetailersSet.size,\n        totalProducts: totalProductCount,\n        totalSalesAmount: totalSalesAmount\n      });\n      \n      if (fetchedVisits.length === 0) {\n        setSnackbar({\n          open: true,\n          message: 'No visits found for the selected period',\n          severity: 'info'\n        });\n      }\n    } catch (error) {\n      console.error(\"Error generating report:\", error);\n      setSnackbar({\n        open: true,\n        message: 'Error generating report: ' + error.message,\n        severity: 'error'\n      });\n    } finally {\n      setDataLoading(false);\n    }\n  };\n\n  // Filter visits by retailer search\n  const filteredVisits = useMemo(() => {\n    if (!retailerSearch || retailerSearch.trim() === '') {\n      return visitsData;\n    }\n    \n    const searchLower = retailerSearch.toLowerCase();\n    return visitsData.filter(visit => {\n      const retailer = retailers[visit.retailerId];\n      return retailer && retailer.name && retailer.name.toLowerCase().includes(searchLower);\n    });\n  }, [visitsData, retailerSearch, retailers]);\n\n  // Pagination handlers\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // Toggle row expansion for product details\n  const handleToggleExpand = (visitId) => {\n    setExpandedRows(prev => ({\n      ...prev,\n      [visitId]: !prev[visitId]\n    }));\n  };\n\n  // Calculate visit duration in a readable format\n  const formatDuration = (checkInTime, checkOutTime) => {\n    if (!checkInTime || !checkOutTime) return 'N/A';\n    \n    try {\n      const minutes = differenceInMinutes(checkOutTime, checkInTime);\n      if (minutes < 0) return 'Invalid duration';\n      \n      if (minutes < 60) {\n        return `${minutes} min${minutes !== 1 ? 's' : ''}`;\n      } else {\n        const hours = Math.floor(minutes / 60);\n        const remainingMinutes = minutes % 60;\n        return `${hours} hr${hours !== 1 ? 's' : ''} ${remainingMinutes > 0 ? `${remainingMinutes} min${remainingMinutes !== 1 ? 's' : ''}` : ''}`;\n      }\n    } catch (error) {\n      console.error(\"Error calculating duration:\", error);\n      return 'Error';\n    }\n  };\n\n  // Export to CSV\n  const exportToCSV = () => {\n    if (filteredVisits.length === 0) {\n      setSnackbar({\n        open: true,\n        message: 'No data to export',\n        severity: 'warning'\n      });\n      return;\n    }\n    \n    // Define headers\n    const headers = [\n      'Date',\n      'Check-in Time',\n      'Check-out Time',\n      'Retailer',\n      'Products Sold',\n      'Product Details',\n      'Total Amount',\n      'Duration'\n    ];\n    \n    // Create rows\n    const rows = filteredVisits.map(visit => {\n      // Format date and times\n      const visitDate = visit.checkInTime ? format(visit.checkInTime, 'yyyy-MM-dd') : 'N/A';\n      const checkInTime = visit.checkInTime ? format(visit.checkInTime, 'HH:mm:ss') : 'N/A';\n      const checkOutTime = visit.checkOutTime ? format(visit.checkOutTime, 'HH:mm:ss') : 'N/A';\n      \n      // Get retailer name\n      const retailerName = retailers[visit.retailerId]?.name || 'Unknown Retailer';\n      \n      // Format products\n      let productCount = 0;\n      let productDetails = '';\n      \n      if (Array.isArray(visit.products)) {\n        productCount = visit.products.reduce((sum, p) => sum + (parseInt(p.count) || 0), 0);\n        \n        productDetails = visit.products.map(p => {\n          const productName = products[p.productId]?.name || 'Unknown Product';\n          const count = p.count || 0;\n          const rate = p.calculatedRate !== null ? p.calculatedRate.toFixed(2) : 'N/A';\n          \n          return `${productName} (${count}) @ ₹${rate}`;\n        }).join('; ');\n      }\n      \n      return [\n        visitDate,\n        checkInTime,\n        checkOutTime,\n        retailerName,\n        productCount.toString(),\n        productDetails,\n        visit.totalAmount ? ('₹' + visit.totalAmount.toFixed(2)) : '₹0.00',\n        formatDuration(visit.checkInTime, visit.checkOutTime)\n      ];\n    });\n    \n    // Create CSV content\n    let csvContent = headers.join(',') + '\\n';\n    rows.forEach(row => {\n      // Quote fields with commas or quotes\n      const processedRow = row.map(field => {\n        if (typeof field === 'string' && (field.includes(',') || field.includes('\"'))) {\n          return `\"${field.replace(/\"/g, '\"\"')}\"`;\n        }\n        return field;\n      });\n      csvContent += processedRow.join(',') + '\\n';\n    });\n    \n    // Add report title and staff info\n    csvContent = `Marketing Staff Details Report\\nStaff: ${staffData?.name || 'Unknown'}\\nDate Range: ${startDate} to ${endDate}\\n\\n` + csvContent;\n    \n    // Create and download the file\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.setAttribute('download', `staff_visits_${staffData?.id || staffId}_${startDate}_${endDate}.csv`);\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Check if user has permission to view this report\n  if (!canViewStaffDetailedReport(userProfile)) {\n    return (\n      <Box sx={{ p: 4, textAlign: 'center' }}>\n        <Typography variant=\"h6\" color=\"error\">\n          You are not authorized to view staff detailed reports.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <Box>\n      <Card sx={{ borderRadius: 2, boxShadow: theme.shadows[2], mb: 4 }}>\n        <CardContent sx={{ p: 3 }}>\n          {/* Header */}\n          <Box sx={{ display: 'flex', alignItems: 'center', mb: 3 }}>\n            {loading ? (\n              <Skeleton variant=\"circular\" width={48} height={48} sx={{ mr: 2 }} />\n            ) : (\n              <Avatar\n                sx={{\n                  bgcolor: theme.palette.warning.light,\n                  color: theme.palette.warning.contrastText || '#fff',\n                  width: 48,\n                  height: 48,\n                  mr: 2,\n                }}\n              >\n                {staffData?.name?.charAt(0) || <PersonIcon />}\n              </Avatar>\n            )}\n            <Box>\n              {loading ? (\n                <>\n                  <Skeleton variant=\"text\" width={250} height={36} />\n                  <Skeleton variant=\"text\" width={300} height={24} />\n                </>\n              ) : (\n                <>\n                  <Typography variant=\"h5\" fontWeight=\"bold\" color=\"text.primary\">\n                    {staffData?.name || 'Marketing Staff'} Visit Report\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Detailed visit history and performance metrics\n                  </Typography>\n                </>\n              )}\n            </Box>\n            <Button\n              variant=\"outlined\"\n              onClick={() => navigate(-1)}\n              sx={{ ml: 'auto', borderRadius: '2rem' }}\n              startIcon={<ArrowBackIcon />}\n            >\n              Back\n            </Button>\n          </Box>\n\n          {/* Filters */}\n          <Paper sx={{ p: 2, mb: 4, borderRadius: 2 }}>\n            <Grid container spacing={2} alignItems=\"center\">\n              <Grid item xs={12} md={3}>\n                <TextField\n                  label=\"Search Retailer\"\n                  type=\"text\"\n                  size=\"small\"\n                  fullWidth\n                  value={retailerSearch}\n                  onChange={(e) => setRetailerSearch(e.target.value)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <SearchIcon sx={{ color: theme.palette.warning.main }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ '& .MuiOutlinedInput-root': { borderRadius: 2 } }}\n                />\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <TextField\n                  label=\"Start Date\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  value={startDate}\n                  onChange={(e) => setStartDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <CalendarIcon sx={{ color: theme.palette.warning.main }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ '& .MuiOutlinedInput-root': { borderRadius: 2 } }}\n                />\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <TextField\n                  label=\"End Date\"\n                  type=\"date\"\n                  size=\"small\"\n                  fullWidth\n                  value={endDate}\n                  onChange={(e) => setEndDate(e.target.value)}\n                  InputLabelProps={{ shrink: true }}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">\n                        <DateRangeIcon sx={{ color: theme.palette.warning.main }} />\n                      </InputAdornment>\n                    ),\n                  }}\n                  sx={{ '& .MuiOutlinedInput-root': { borderRadius: 2 } }}\n                />\n              </Grid>\n              <Grid item xs={12} md={3}>\n                <Box sx={{ display: 'flex', gap: 1 }}>\n                  <Button\n                    variant=\"contained\"\n                    onClick={generateReport}\n                    disabled={dataLoading}\n                    startIcon={<FilterIcon />}\n                    sx={{\n                      borderRadius: '2rem',\n                      bgcolor: theme.palette.warning.main,\n                      '&:hover': { bgcolor: theme.palette.warning.dark }\n                    }}\n                  >\n                    Apply Filters\n                  </Button>\n                  <Button\n                    variant=\"outlined\"\n                    onClick={exportToCSV}\n                    disabled={dataLoading || filteredVisits.length === 0}\n                    startIcon={<FileDownloadIcon />}\n                    sx={{\n                      borderRadius: '2rem',\n                      borderColor: theme.palette.warning.main,\n                      color: theme.palette.warning.main,\n                      '&:hover': { borderColor: theme.palette.warning.dark }\n                    }}\n                  >\n                    Export CSV\n                  </Button>\n                </Box>\n              </Grid>\n            </Grid>\n          </Paper>\n\n          {/* Summary Stats */}\n          <Box sx={{ mb: 4 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6} md={3}>\n                {dataLoading ? (\n                  <Skeleton variant=\"rectangular\" height={100} width=\"100%\" />\n                ) : (\n                  <Paper\n                    elevation={0}\n                    sx={{\n                      p: 2,\n                      borderRadius: 2,\n                      bgcolor: theme.palette.warning.light,\n                      color: theme.palette.warning.contrastText,\n                      textAlign: 'center',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 1 }}>\n                      {summaryStats.totalVisits}\n                    </Typography>\n                    <Typography variant=\"body1\">Total Visits</Typography>\n                  </Paper>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                {dataLoading ? (\n                  <Skeleton variant=\"rectangular\" height={100} width=\"100%\" />\n                ) : (\n                  <Paper\n                    elevation={0}\n                    sx={{\n                      p: 2,\n                      borderRadius: 2,\n                      bgcolor: theme.palette.primary.light,\n                      color: theme.palette.primary.contrastText,\n                      textAlign: 'center',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 1 }}>\n                      {summaryStats.uniqueRetailers}\n                    </Typography>\n                    <Typography variant=\"body1\">Retailers Visited</Typography>\n                  </Paper>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                {dataLoading ? (\n                  <Skeleton variant=\"rectangular\" height={100} width=\"100%\" />\n                ) : (\n                  <Paper\n                    elevation={0}\n                    sx={{\n                      p: 2,\n                      borderRadius: 2,\n                      bgcolor: theme.palette.info.light,\n                      color: theme.palette.info.contrastText,\n                      textAlign: 'center',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 1 }}>\n                      {summaryStats.totalProducts}\n                    </Typography>\n                    <Typography variant=\"body1\">Products Sold</Typography>\n                  </Paper>\n                )}\n              </Grid>\n              <Grid item xs={12} sm={6} md={3}>\n                {dataLoading ? (\n                  <Skeleton variant=\"rectangular\" height={100} width=\"100%\" />\n                ) : (\n                  <Paper\n                    elevation={0}\n                    sx={{\n                      p: 2,\n                      borderRadius: 2,\n                      bgcolor: theme.palette.success.light,\n                      color: theme.palette.success.contrastText,\n                      textAlign: 'center',\n                      height: '100%',\n                      display: 'flex',\n                      flexDirection: 'column',\n                      justifyContent: 'center'\n                    }}\n                  >\n                    <Typography variant=\"h3\" sx={{ fontWeight: 700, mb: 1 }}>\n                      ₹{summaryStats.totalSalesAmount.toFixed(2)}\n                    </Typography>\n                    <Typography variant=\"body1\">Total Sales Amount</Typography>\n                  </Paper>\n                )}\n              </Grid>\n            </Grid>\n          </Box>\n\n          {/* Visits Table */}\n          {dataLoading ? (\n            <>\n              <Skeleton variant=\"text\" width={300} height={32} sx={{ mb: 2 }} />\n              <Skeleton variant=\"rectangular\" height={400} width=\"100%\" />\n            </>\n          ) : filteredVisits.length === 0 ? (\n            <Box sx={{ textAlign: 'center', p: 4, bgcolor: 'rgba(0,0,0,0.02)', borderRadius: 2 }}>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                No visits found for the selected criteria\n              </Typography>\n            </Box>\n          ) : (\n            <Box>\n              <Typography variant=\"subtitle1\" sx={{ mb: 1, fontWeight: 'bold' }}>\n                Showing {filteredVisits.length} visit{filteredVisits.length !== 1 ? 's' : ''} \n                {retailerSearch ? ` matching \"${retailerSearch}\"` : ''}\n                {` (${startDate} to ${endDate})`}\n              </Typography>\n              \n              <TableContainer sx={{ maxHeight: 440 }}>\n                <Table stickyHeader>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Date & Time</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Retailer</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold' }}>Products</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold', textAlign: 'right' }}>Sales Amount</TableCell>\n                      <TableCell sx={{ fontWeight: 'bold', textAlign: 'center' }}>Duration</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {filteredVisits\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((visit) => [\n                        <TableRow \n                          key={visit.id}\n                          sx={{ '&:hover': { bgcolor: 'rgba(0,0,0,0.04)' } }}\n                        >\n                          <TableCell>\n                            <Box>\n                              <Typography variant=\"body2\" fontWeight={500}>\n                                {visit.checkInTime ? format(visit.checkInTime, 'MMM d, yyyy') : 'N/A'}\n                              </Typography>\n                              <Typography variant=\"caption\" color=\"text.secondary\">\n                                {visit.checkInTime ? format(visit.checkInTime, 'h:mm a') : 'N/A'} - \n                                {visit.checkOutTime ? format(visit.checkOutTime, 'h:mm a') : 'N/A'}\n                              </Typography>\n                            </Box>\n                          </TableCell>\n                          <TableCell>\n                            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                              <StoreIcon sx={{ color: theme.palette.primary.main, mr: 1, fontSize: 20 }} />\n                              <Typography variant=\"body2\">{retailers[visit.retailerId]?.name || 'Unknown Retailer'}</Typography>\n                            </Box>\n                          </TableCell>\n                          <TableCell>\n                            {Array.isArray(visit.products) && visit.products.length > 0 ? (\n                              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                                <ProductIcon sx={{ color: theme.palette.info.main, fontSize: 18, mr: 0.5 }} />\n                                <Typography variant=\"body2\" fontWeight={500} sx={{ mr: 1 }}>\n                                  {visit.productCount} product{visit.productCount !== 1 ? 's' : ''}\n                                </Typography>\n                                <IconButton\n                                  size=\"small\"\n                                  onClick={() => handleToggleExpand(visit.id)}\n                                  sx={{ p: 0.5 }}\n                                >\n                                  {expandedRows[visit.id] ? <ExpandLessIcon fontSize=\"small\" /> : <ExpandMoreIcon fontSize=\"small\" />}\n                                </IconButton>\n                              </Box>\n                            ) : (\n                              <Typography variant=\"body2\" color=\"text.secondary\">No products</Typography>\n                            )}\n                          </TableCell>\n                          <TableCell align=\"right\">\n                            <Typography variant=\"body2\" fontWeight={600} color={theme.palette.success.main}>\n                              ₹{visit.totalAmount?.toFixed(2) || '0.00'}\n                            </Typography>\n                          </TableCell>\n                          <TableCell align=\"center\">\n                            {visit.checkInTime && visit.checkOutTime ? (\n                              <Typography variant=\"body2\" fontWeight={500}>\n                                {formatDuration(visit.checkInTime, visit.checkOutTime)}\n                              </Typography>\n                            ) : (\n                              <Typography variant=\"body2\" color=\"text.secondary\">\n                                N/A\n                              </Typography>\n                            )}\n                          </TableCell>\n                        </TableRow>,\n                        expandedRows[visit.id] && (\n                          <TableRow key={`${visit.id}-expanded`}>\n                            <TableCell colSpan={5} sx={{ py: 0, bgcolor: 'rgba(255, 152, 0, 0.03)' }}>\n                              <Box sx={{ p: 2 }}>\n                                <Typography variant=\"subtitle2\" sx={{ mb: 1, color: theme.palette.warning.dark }}>\n                                  Product Details\n                                </Typography>\n                                <TableContainer component={Paper} variant=\"outlined\" sx={{ maxHeight: 200 }}>\n                                  <Table size=\"small\">\n                                    <TableHead>\n                                      <TableRow>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Product</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Quantity</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold' }}>Rate</TableCell>\n                                        <TableCell sx={{ fontWeight: 'bold', textAlign: 'right' }}>Amount</TableCell>\n                                      </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                      {visit.products.map((product, index) => (\n                                        <TableRow key={`${visit.id}-product-${index}`}>\n                                          <TableCell>{products[product.productId]?.name || 'Unknown Product'}</TableCell>\n                                          <TableCell>{product.count || 0}</TableCell>\n                                          <TableCell>\n                                            {product.calculatedRate !== null \n                                              ? `₹${product.calculatedRate.toFixed(2)}` \n                                              : 'N/A'}\n                                          </TableCell>\n                                          <TableCell align=\"right\">\n                                            {product.calculatedAmount \n                                              ? `₹${product.calculatedAmount.toFixed(2)}` \n                                              : '₹0.00'}\n                                          </TableCell>\n                                        </TableRow>\n                                      ))}\n                                    </TableBody>\n                                  </Table>\n                                </TableContainer>\n                              </Box>\n                            </TableCell>\n                          </TableRow>\n                        )\n                      ])}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[10, 25, 50]}\n                component=\"div\"\n                count={filteredVisits.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n              />\n            </Box>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Snackbar for notifications */}\n      <Snackbar\n        open={snackbar.open}\n        autoHideDuration={6000}\n        onClose={() => setSnackbar({ ...snackbar, open: false })}\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n      >\n        <Alert \n          onClose={() => setSnackbar({ ...snackbar, open: false })} \n          severity={snackbar.severity}\n          sx={{ width: '100%' }}\n        >\n          {snackbar.message}\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n} ","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61\"\n}), 'FilterAlt');"],"names":["createSvgIcon","_jsx","d","differenceInMilliseconds","laterDate","earlierDate","toDate","differenceInMinutes","dateLeft","dateRight","options","diff","millisecondsInMinute","method","roundingMethod","number","result","Math","trunc","timestamp","Date","date","isValid","e","console","error","MarketingStaffDetailedReport","_location$state","_staffData$name","theme","useTheme","navigate","useNavigate","staffId","useParams","location","useLocation","userProfile","allUsers","allDealers","loading","authLoading","useAuth","staffFromLocation","state","staff","setLoading","useState","loadingAuth","setLoadingAuth","dataLoading","setDataLoading","startDate","setStartDate","endDate","setEndDate","retailerSearch","setRetailerSearch","staffData","setStaffData","visitsData","setVisitsData","snackbar","setSnackbar","open","message","severity","page","setPage","rowsPerPage","setRowsPerPage","expandedRows","setExpandedRows","products","setProducts","retailers","setRetailers","summaryStats","setSummaryStats","totalVisits","uniqueRetailers","totalProducts","totalSalesAmount","unauthorized","setUnauthorized","useEffect","today","thirtyDaysAgo","setDate","getDate","toISOString","split","async","hasAccess","role","id","getSubordinateIds","includes","checkPermissions","staffDocRef","doc","db","staffDoc","getDoc","exists","data","fetchStaffData","productsSnapshot","getDocs","collection","productsData","forEach","fetchProducts","retailersSnapshot","retailersData","fetchRetailers","generateReport","startTimestamp","endTimestamp","staffIdToUse","visitsQuery","query","where","orderBy","fetchedVisits","docs","map","checkInTime","checkOutTime","inventoryEntryIds","Set","visit","inventoryEntryId","add","inventoryEntriesMap","size","inventoryPromises","Array","from","entryDoc","entryId","Promise","all","productRatesQuery","productRatesSnapshot","productRatesMap","productId","rate","parseFloat","uniqueRetailersSet","totalProductCount","retailerId","visitTotal","productCount","isArray","product","count","parseInt","_inventoryEntry$produ","productEntry","productEntries","find","pe","calculatedRate","calculatedAmount","totalAmount","length","filteredVisits","useMemo","trim","searchLower","toLowerCase","filter","retailer","name","formatDuration","minutes","hours","floor","remainingMinutes","canViewStaffDetailedReport","_jsxs","Box","children","Card","sx","borderRadius","boxShadow","shadows","mb","CardContent","p","display","alignItems","Skeleton","variant","width","height","mr","Avatar","bgcolor","palette","warning","light","color","contrastText","charAt","PersonIcon","_Fragment","Typography","fontWeight","Button","onClick","ml","startIcon","ArrowBackIcon","Paper","Grid","container","spacing","item","xs","md","TextField","label","type","fullWidth","value","onChange","target","InputProps","startAdornment","InputAdornment","position","SearchIcon","main","InputLabelProps","shrink","CalendarIcon","DateRangeIcon","gap","disabled","FilterIcon","dark","exportToCSV","rows","_retailers$visit$reta","visitDate","format","retailerName","productDetails","reduce","sum","_products$p$productId","toFixed","join","toString","csvContent","row","processedRow","field","replace","blob","Blob","url","URL","createObjectURL","link","document","createElement","href","setAttribute","body","appendChild","click","removeChild","FileDownloadIcon","borderColor","sm","elevation","textAlign","flexDirection","justifyContent","primary","info","success","TableContainer","maxHeight","Table","stickyHeader","TableHead","TableRow","TableCell","TableBody","slice","_retailers$visit$reta2","_visit$totalAmount","StoreIcon","fontSize","ProductIcon","IconButton","handleToggleExpand","visitId","prev","ExpandLessIcon","ExpandMoreIcon","align","colSpan","py","component","index","_products$product$pro","TablePagination","rowsPerPageOptions","onPageChange","handleChangePage","event","newPage","onRowsPerPageChange","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert"],"sourceRoot":""}